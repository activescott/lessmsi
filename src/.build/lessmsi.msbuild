<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build;BeforeTest;Deploy;Zip;UpdateChocolatey">
	<!--
	References:
		http://msdn.microsoft.com/en-us/library/vstudio/dd393574.aspx
		http://msdn.microsoft.com/en-us/library/vstudio/ms164313.aspx
	-->

	<!-- Some misc properties -->
	<PropertyGroup>
		<RootDir>..\</RootDir>
		<TheDeployDir>$(RootDir)\.deploy</TheDeployDir>
		<TheTempDir>$(RootDir)\.temp</TheTempDir>
		<AssemblyCopyright>Copyright Scott Willeke Â© 2004-$([System.DateTime]::Now.Year)</AssemblyCopyright>
		<TheZipFileName>lessmsi-v$(TheVersion).zip</TheZipFileName>
		<NugetPath>../.nuget/nuget.exe</NugetPath>
		<Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
	</PropertyGroup>

	<!-- Items: https://msdn.microsoft.com/en-us/library/ms171453.aspx -->
	<ItemGroup>
		<TheProjects Include="$(RootDir)\LessMsi.Core\LessMsi.Core.csproj"></TheProjects>
		<TheProjects Include="$(RootDir)\LessMsi.Cli\LessMsi.Cli.csproj"></TheProjects>
		<TheProjects Include="$(RootDir)\ExplorerShortcutHelper\ExplorerShortcutHelper.csproj"></TheProjects>
		<TheProjects Include="$(RootDir)\LessMsi.Gui\LessMsi.Gui.csproj"></TheProjects>
		<TheProjects Include="$(RootDir)\LessMsi.Tests\LessMsi.Tests.csproj"></TheProjects>
	</ItemGroup>

	<ItemDefinitionGroup>
		<DeployFiles>
			<!-- This adds a deafult empty TheCulture item metadata to the DeployFiles itemgroup -->
			<TheCulture></TheCulture>
		</DeployFiles>
	</ItemDefinitionGroup>

	<ItemGroup>
		<DeployFiles Include="$(RootDir)\ExplorerShortcutHelper\bin\Release\AddWindowsExplorerShortcut.exe"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Core\bin\Release\lessmsi.core.dll"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Cli\bin\Release\lessmsi.exe"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Cli\bin\Release\lessmsi.exe.config"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Gui\bin\Release\lessmsi-gui.exe"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Gui\bin\Release\lessmsi-gui.exe.config"></DeployFiles>
		<DeployFiles Include="$(RootDir)\LessMsi.Gui\bin\Release\it\lessmsi-gui.resources.dll">
			<!-- TheCulture is MSBuild's so-called "Item Metadata". See https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-items?view=vs-2022&source=recommendations#item-metadata -->
			<TheCulture>it</TheCulture>
		</DeployFiles>
		<DeployFiles Include="$(RootDir)\packages\libmspack4n.0.9.10\lib\net40\libmspackn.dll"></DeployFiles>
		<DeployFiles Include="$(RootDir)\packages\libmspack4n.0.9.10\build\x86\mspack.dll"></DeployFiles>
		<DeployFiles Include="$(RootDir)\packages\LessIO.1.0.34\lib\net40\LessIO.dll"></DeployFiles>
		<DeployFiles Include="$(RootDir)\..\lib\wix.dll"></DeployFiles>
		<DeployFiles Include="$(RootDir)\..\lib\wixcab.dll"></DeployFiles>
	</ItemGroup>

	<Target Name="Init">

		<ConvertToAbsolutePath Paths="$(RootDir)">
			<Output TaskParameter="AbsolutePaths" PropertyName="RootDir"/>
		</ConvertToAbsolutePath>
		<!-- Apparently the PropertyGroup values are evaluated early and not reevaluated on demand because I had to run this again to get it to accept the new root dir value -->
		<ConvertToAbsolutePath Paths="$(TheDeployDir)">
			<Output TaskParameter="AbsolutePaths" PropertyName="TheDeployDir"/>
		</ConvertToAbsolutePath>
		<ConvertToAbsolutePath Paths="$(NugetPath)">
			<Output TaskParameter="AbsolutePaths" PropertyName="NugetPath"/>
		</ConvertToAbsolutePath>

		<Message Text="Project File Name = $(MSBuildProjectFile)" />
		<Message Text="Project Extension = $(MSBuildProjectExtension)" />
		<Message Text="MSBuildProjectDirectory = $(MSBuildProjectDirectory)" />
		<Message Text="SolutionDir = $(SolutionDir)" />

		<Message Text="RootDir=$(RootDir)" />
		<Message Text="TheDeployDir=$(TheDeployDir)" />

	</Target>

	<Target Name="Validate">
		<ItemGroup>
			<_RequiredProperties Include="TheVersion">
				<Value>$(TheVersion)</Value>
			</_RequiredProperties>
		</ItemGroup>

		<Error
			Condition=" '%(_RequiredProperties.Value)'=='' "
			Text=" Missing required property [%(_RequiredProperties.Identity)]"
		/>
	</Target>

	<Target Name="SetProjectVersion">
		<!-- This all from https://artemigos.github.io/coding/2017/07/10/assembly-versioning-with-msbuild.html - Thanks! -->
		<ItemGroup>
			<Attr Include="AssemblyVersion">
				<_Parameter1>$(TheVersion)</_Parameter1>
			</Attr>
			<Attr Include="AssemblyFileVersion">
				<_Parameter1>$(TheVersion)</_Parameter1>
			</Attr>
			<Attr Include="AssemblyCopyright">
				<_Parameter1>$(AssemblyCopyright)</_Parameter1>
			</Attr>
		</ItemGroup>
		<WriteCodeFragment
			AssemblyAttributes="@(Attr)"
			Language="C#"
			OutputFile="$(RootDir)\CommonAssemblyInfo.cs"
		/>

	</Target>

	<Target Name="Clean">
		<RemoveDir Directories="$(TheDeployDir)" />
		<RemoveDir Directories="$(TheTempDir)" />
	</Target>

	<Target Name="EnsureDependencies" DependsOnTargets="Init">
		<!-- Only download a new copy of nuget.exe if we don't have a copy available -->
		<WebDownload Condition="!Exists('$(NugetPath)')" Filename="$(NugetPath)" FileUri="https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" />

		<Exec Command='$(NugetPath) restore -Verbosity Detailed -NonInteractive -OutputDirectory $(RootDir)\packages\ -Source "https://api.nuget.org/v3/index.json" $(RootDir)\LessMsi.sln'></Exec>
	</Target>

	<Target Name="Build" DependsOnTargets="Init;Validate;SetProjectVersion;EnsureDependencies">
		<Message Text="Building version: $(TheVersion)" />

		<Message Text="Absolute project path: %(TheProjects.FullPath)" />

		<MSBuild
			Projects="%(TheProjects.FullPath)"
			Properties="Configuration=Release;Platform=x86;ApplicationVersion=$(TheVersion);SolutionDir=$(RootDir)"
			Targets="Rebuild"
		/>
	</Target>

	<Target Name="Deploy" DependsOnTargets="Build;Clean">
		<MakeDir Directories="$(TheDeployDir)" />

		<!-- The condition of empty TheCulture means it is not a culture-specific resource and does not need put in a subdirectory-->
		<Copy
			Condition=" '%(TheCulture)' == '' "
			SourceFiles="%(DeployFiles.FullPath)"
			DestinationFolder="$(TheDeployDir)\%(RecursiveDir)"
		/>

		<!--
			GUI Resources
			Here we add TheCulture item metadata to the deployfiles that require it so we can put them in the correct location in deploy zip.
		-->
		<Copy
			Condition=" '%(TheCulture)' != '' "
			SourceFiles="%(DeployFiles.FullPath)"
			DestinationFolder="$(TheDeployDir)\%(TheCulture)"
		/>

	</Target>

	<Target Name="BeforeTest" DependsOnTargets="Init;Clean">
		<!-- Prepares for running tests in $(TheDeployDir) -->
		<ItemGroup>
			<TestBinaries Include="$(RootDir)\LessMsi.Tests\Bin\$(Configuration)\LessMsi.Tests.dll" />
			<TestBinaries Include="$(RootDir)\LessMsi.Tests\Bin\$(Configuration)\xunit.*.dll" />
		</ItemGroup>
		<ItemGroup>
			<TestFiles Include="$(RootDir)\LessMsi.Tests\TestFiles\**\*.*"></TestFiles>
		</ItemGroup>

		<Copy
		  SourceFiles="@(TestFiles)"
		  DestinationFiles="@(TestFiles->'$(TheDeployDir)\TestFiles\%(RecursiveDir)%(Filename)%(Extension)')"
	/>

		<Copy
		  SourceFiles="@(TestBinaries)"
		  DestinationFolder="$(TheDeployDir)"
	/>
	</Target>

	<Target Name="Zip" DependsOnTargets="Deploy">
		<!-- ZipDirectory built-in task: https://learn.microsoft.com/en-us/visualstudio/msbuild/zipdirectory-task?view=vs-2022 -->
		<MakeDir Directories="$(TheTempDir)" />

		<!-- the deploy dir has test files in it too, so we move deploy files to a staging directory -->
		<MakeDir Directories="$(TheTempDir)\zipstaging" />
		<!-- The condition of empty TheCulture means it is not a culture-specific resource and does not need put in a subdirectory-->
		<Copy
			Condition=" '%(TheCulture)' == '' "
			SourceFiles="%(DeployFiles.FullPath)"
			DestinationFolder="$(TheTempDir)\zipstaging"
		/>
		<!-- Copy GUI resources into zip staging 
			Here we add TheCulture item metadata to the deployfiles that require it so we can put them in the correct location in deploy zip.
		-->
		<Copy
			Condition=" '%(TheCulture)' != '' "
			SourceFiles="%(DeployFiles.FullPath)"
			DestinationFolder="$(TheTempDir)\zipstaging\%(TheCulture)"
		/>
		<ZipDirectory
			SourceDirectory="$(TheTempDir)\zipstaging"
			DestinationFile="$(TheTempDir)\$(TheZipFileName)"
		/>
		<!-- Now copy the temp zip file into the deploy directory -->
		<Copy
		  SourceFiles="$(TheTempDir)\$(TheZipFileName)"
		  DestinationFolder="$(TheDeployDir)"
		/>
	</Target>

	<Target Name="UpdateChocolatey" DependsOnTargets="Deploy">
		<!-- 
			For this chocolatey packaging stuff see:
			http://www.topbug.net/blog/2012/07/02/a-simple-tutorial-create-and-publish-chocolatey-packages/
		 -->
		<PropertyGroup>
			<PackageDir>$(TheDeployDir)\chocolateypackage</PackageDir>
		</PropertyGroup>

		<Copy
			SourceFiles="lessmsi.nuspec"
			DestinationFolder="$(PackageDir)"
		/>
		<Copy
			SourceFiles="$(TheDeployDir)\$(TheZipFileName)"
			DestinationFolder="$(PackageDir)\tools"
		/>
		<Copy
			SourceFiles="chocolateyInstall.ps1"
			DestinationFolder="$(PackageDir)\tools"
		/>
		<Copy
			SourceFiles="$(RootDir)\LICENSE"
			DestinationFolder="$(PackageDir)\tools"
		/>
		<Copy
			SourceFiles="$(RootDir)\.build\VERIFICATION.txt"
			DestinationFolder="$(PackageDir)\tools"
		/>
		<XmlPoke
			XmlInputPath="$(PackageDir)\lessmsi.nuspec"
			Query="//package/metadata/version"
			Value="$(TheVersion)"
		/>
		<WriteLinesToFile
			File="$(PackageDir)\tools\chocolateyInstall.ps1"
			Lines="$([System.IO.File]::ReadAllText($(PackageDir)\tools\chocolateyInstall.ps1).Replace('__ZIP_FILE__','$(TheZipFileName)'))"
			Overwrite="true"
		/>

		<Exec
			Command="choco pack $(PackageDir)\lessmsi.nuspec"
			WorkingDirectory="$(PackageDir)"
			ContinueOnError="true"
		>
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
		</Exec>
		<Message Text="cpack exit code:$(ErrorCode)" />
		<Error
			Condition="$(ErrorCode)!=0"
			Text="cpack failed. Make sure you have chocolatey installed and accessible from the commandline. See chocolatey.org to install and for more info about packaging see https://github.com/chocolatey/chocolatey/wiki"
		/>
		<Message
			Text="Chocolatey.org package built. To test the chocolatey.org package run `cinst lessmsi -source $(PackageDir)`"
			Importance="high"
		/>

		<Message
			Importance="high"
			Text="

Next Steps to publish:
- Tag the repo: `git tag v$(TheVersion)`
- Push the tag to github to create the release: `git push --tags`
- Upload $(TheZipFileName) at https://github.com/activescott/lessmsi/releases/tag/v$(TheVersion)
- Run `cpush $(PackageDir)\lessmsi.$(TheVersion).nupkg` to push to chocolatey.org (see https://github.com/chocolatey/chocolatey/wiki/CommandsPush for more info on cpush)
"
		/>
	</Target>
</Project>
